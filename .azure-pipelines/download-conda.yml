# Script for downloading conda packages
# This lowers the chances of network failures by consolidating downloads.
# Also, wget will automatically retry downloads.
#
# Variables:
#   OS: linux-64, osx-64, win-64
#   PYTHON_VERSION: py27, py36, py37, py38

jobs:
- job: conda_packages
  pool:
    vmImage: ubuntu-latest
  timeoutInMinutes: 120
  strategy:
    maxParallel: 3
    matrix:
      linux_py27:
        OS: linux-64
        PYTHON_VERSION: py27
      linux_py36:
        OS: linux-64
        PYTHON_VERSION: py36
      linux_py37:
        OS: linux-64
        PYTHON_VERSION: py37
      linux_py38:
        OS: linux-64
        PYTHON_VERSION: py38
      linux_py39:
        OS: linux-64
        PYTHON_VERSION: py39
      macos_py27:
        OS: osx-64
        PYTHON_VERSION: py27
      macos_py36:
        OS: osx-64
        PYTHON_VERSION: py36
      macos_py37:
        OS: osx-64
        PYTHON_VERSION: py37
      macos_py38:
        OS: osx-64
        PYTHON_VERSION: py38
      macos_py39:
        OS: osx-64
        PYTHON_VERSION: py39
      win_py36:
        OS: win-64
        PYTHON_VERSION: py36
      win_py37:
        OS: win-64
        PYTHON_VERSION: py37
      win_py38:
        OS: win-64
        PYTHON_VERSION: py38
      win_py39:
        OS: win-64
        PYTHON_VERSION: py39

  steps:

  - checkout: self
    path: ./modules/cctbx_project

  - script: |
      cd $(Pipeline.Workspace)
      mkdir $(PYTHON_VERSION)_$(OS)
      cd $(PYTHON_VERSION)_$(OS)
      for url in `grep https $(Pipeline.Workspace)/modules/cctbx_project/libtbx/auto_build/conda_envs/cctbx_$(PYTHON_VERSION)_$(OS).txt`; do
        filename=${url##*/}
        filename=${filename%#*}
        directory=`echo ${url} | cut -f5 -d"/"`
        if [ "${directory}" = "main" ]; then
          directory=`echo ${url} | cut -f6 -d"/"`
        fi
        mkdir -p ${directory}
        cd ${directory}
        echo Downloading ${filename} to ${directory}
        wget --retry-connrefused --retry-on-http-error=500,503,520,525 ${url}
        cd ..
        if [ "$(OS)" = "win-64" ]; then
          echo ${directory}\\${filename} >> filenames.txt
        else
          echo ${directory}/${filename} >> filenames.txt
        fi
      done
      ls
    displayName: Download conda packages

  - publish: $(Pipeline.Workspace)/$(PYTHON_VERSION)_$(OS)
    artifact: $(PYTHON_VERSION)_$(OS)
